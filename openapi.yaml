openapi: 3.0.0
info:
  title: Calendar Promo API
  description: Manages calendar events with speaker data
  version: 1.0.0
tags:
  - name: Speaker
    description: Operations to manage maintenance of a speakers
  - name: Event
    description: Operations to manage maintenance of a event

x-amazon-apigateway-cors:
  allowOrigins:
    - '*'
  allowMethods:
    - GET
    - POST
    - PUT
  allowHeaders:
    - content-type
  maxAge: 3600

paths:
  /events/{eventId}:
    parameters:
      - $ref: '#/components/parameters/eventId'
    get:
      summary: Get the form to fill out missing speaker information
      description: View webpage to edit speaker information for an event
      tags:
        - Event
      responses:
        200:
          description: OK
          content:
            text/html:
              schema:
                type: string
        403:
          $ref: '#/components/responses/Forbidden'
        500:
          $ref: '#/components/responses/InternalServerError'
  /events/{eventId}/submit:
    parameters:
      - $ref: '#/components/parameters/eventId'
    post:
      summary: Submits the speaker data for an event
      description: Accepts the speaker data in an as-is state
      tags:
        - Event
      responses:
        204:
          $ref: '#/components/responses/NoContentUpdate'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EventConfirmation'

  /speakers/{speakerId}:
    parameters:
      - $ref: '#/components/parameters/speakerId'
    put:
      summary: Updates speaker information
      description: Updates the speaker information in the database for future use
      tags:
        - Speaker
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Speaker'
        required: true
      responses:
        204:
          $ref: '#/components/responses/NoContentUpdate'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/InternalServerError'

components:
  parameters:
    eventId:
      name: eventId
      in: path
      description: Identifier for an event
      required: true
      example: 09sl3415098gplmn
      schema:
        type: string
    speakerId:
      name: speakerId
      in: path
      description: Identifier for aspeaker
      required: true
      example: 3
      schema:
        type: string

  schemas:
    EventConfirmation:
      type: object
      required:
        - token
      properties:
        token:
          type: string

    Speaker:
      type: object
      properties:
        twitter:
          type: string
        discord:
          type: string

  responses:
    Created: #201
      description: The request succeeded and created a new account
      content:
        application/json:
          schema:
            type: object
            properties:
              id:
                type: string
            required:
              - id
    NoContentUpdate: #204
      description: The request succeeded and updated an existing item
    ClientError: #400
      description: The request was in an invalid format
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Could not perform operation with provided data
            required:
              - message
    Forbidden: #403
      description: The caller is not authorized to perform this operation
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Forbidden
            required:
              - message
    NotFound: #404
      description: The requested item was not found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Could not find an account with the specified id.
            required:
              - message
    Conflict: #409
      description: The requested item was not in the proper state
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: The provided platform is not configured
            required:
              - message
    InternalServerError: #500
      description: The server encountered an unexpected condition which prevented it from fulfilling the request.
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: An error occurred saving the item.
            required:
              - message
